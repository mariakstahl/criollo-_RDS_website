[["index.html", "Reproducible Data Science Final Project 2023 Chapter 1 Project description 1.1 Datasets available 1.2 Database structure", " Reproducible Data Science Final Project 2023 Maria Stahl 2023-03-18 Chapter 1 Project description For my dissertation, I am following a herd of 40 cows in San Juan County, UT. 20 of these individuals are Red Angus, a conventional breed of cattle, and 20 are Raramuri Criollo, a heritage breed of cattle from the mountains of northern Mexico. Previous research suggests that Criollo cows may be better adapted to hot and dry desert conditions, making them a more sustainable alternative to Red Angus that would allow producers to maintain ecosystem function and health under livestock production. 1.1 Datasets available As part of this project, I am linking together many datasets into one relational database. Each cow as been equipped with GPS collars to track movement, and we have periodically collected morphometric data and fecal samples from the herd. Below are the datasets I have available and am adding to the database: * Cow bread and ear tag ID * Beef metrics (including weights and body condition scores) * Diet sample data * Collar deployment dates * Collars (including brand and serial number) * GPS data (raw from the collars) 1.2 Database structure Below is a schematic of the structure of my relational database. The next chapter will detail how the database was constructed. Schematic of database structure "],["combine-collar-data-from-lotek-and-ats-collars.html", "Chapter 2 Combine collar data from Lotek and ATS collars 2.1 Read Lotek collar data 2.2 Read ATS data 2.3 Combine collar data 2.4 add cow ear tag and breed info 2.5 clean collar data 2.6 save output to .csv", " Chapter 2 Combine collar data from Lotek and ATS collars 2.0.1 Description This code reads in all the Lotek and ATS GPS .csv files, organizes them into the same format, and combines them into one .csv with the associated cow metadata (ear tag and breed). We need to do this before we create the database! Jan 2023: Lotek GPS files are matched with cattle ID based only on collar ID. This will be an issue in the future when we start re-using Lotek collars and have multiple cattle IDs associated with each Lotek collar. When this happens, I will need to add a section of code that looks not only at the collar ID but also at the dates to match collars to cows. 2.1 Read Lotek collar data # gps file names lotek.collar.files.march = list.files(path = &quot;../cattle/raw data/collar data/2022-03_collarData/gps&quot;, pattern = &quot;*.csv&quot;, full.names = T) lotek.collar.files.june = list.files(path = &quot;../cattle/raw data/collar data/2022-06_collarData/gps&quot;, pattern = &quot;*.csv&quot;, full.names = T) lotek.collar.files.all = c(lotek.collar.files.march, lotek.collar.files.june) # collar numbers lotek.collar.numbers = lotek.collar.files.all %&gt;% substring(nchar(.)-28, nchar(.)-24) # collar data lotek.collar.list = lotek.collar.files.all %&gt;% map(~fread(.)) # add column with collar number for(i in seq_along(lotek.collar.list)){ lotek.collar.list[[i]]$CollarSerialNumber &lt;- lotek.collar.numbers[i] } cattle.dat.lotek = lotek.collar.list %&gt;% bind_rows() 2.2 Read ATS data # gps file names ats.files = list.files(path = &quot;../cattle/raw data/collar data/ats&quot;, pattern = &quot;*.txt&quot;, full.names = T) # collar data ats.collar.list = ats.files %&gt;% map(~fread(.)) # create data.frame from list cattle.dat.ATS = ats.collar.list %&gt;% bind_rows() 2.3 Combine collar data # what column names are we working with here? names(cattle.dat.ATS) ## [1] &quot;CollarSerialNumber&quot; &quot;Year&quot; &quot;Julianday&quot; ## [4] &quot;Hour&quot; &quot;Minute&quot; &quot;Activity&quot; ## [7] &quot;Temperature&quot; &quot;Latitude&quot; &quot;Longitude&quot; ## [10] &quot;HDOP&quot; &quot;NumSats&quot; &quot;FixTime&quot; ## [13] &quot;2D/3D&quot; &quot;Date&quot; names(cattle.dat.lotek) ## [1] &quot;GMT Time&quot; &quot;Latitude&quot; &quot;Longitude&quot; ## [4] &quot;Altitude&quot; &quot;Duration&quot; &quot;Temperature&quot; ## [7] &quot;DOP&quot; &quot;Satellites&quot; &quot;Cause of Fix&quot; ## [10] &quot;CollarSerialNumber&quot; ### add date_time column to both data.frames ---- # Lotek cattle.dat.lotek$date_time = as.POSIXct(cattle.dat.lotek$`GMT Time`, format = &#39;%m/%d/%Y %H:%M:%S %p&#39;, tz = &#39;GMT&#39;) # ATS cattle.dat.ATS$Date = as.Date(cattle.dat.ATS$Julianday, origin = &#39;2021-12-31&#39;) cattle.dat.ATS$date_time = paste(cattle.dat.ATS$Hour, cattle.dat.ATS$Minute, sep = &#39;:&#39;) %&gt;% paste(cattle.dat.ATS$Date, .) %&gt;% as.POSIXct(format = &#39;%Y-%m-%d %H:%M&#39;) ### rename NumSat column ---- cattle.dat.lotek = cattle.dat.lotek %&gt;% rename(NumSats = Satellites) ### add DOP column to ATS cattle.dat.ATS = cattle.dat.ATS %&gt;% mutate(DOP = NA) ### add HDOP column to Lotek cattle.dat.lotek = cattle.dat.lotek %&gt;% mutate(HDOP = NA) ### drop unneeded columns ---- cattle.dat.ATS = cattle.dat.ATS %&gt;% dplyr::select(c(&#39;CollarSerialNumber&#39;, &#39;date_time&#39;, &#39;Latitude&#39;, &#39;Longitude&#39;, &#39;Temperature&#39;, &#39;NumSats&#39;, &#39;DOP&#39;, &#39;HDOP&#39;)) cattle.dat.lotek = cattle.dat.lotek %&gt;% dplyr::select(c(&#39;CollarSerialNumber&#39;, &#39;date_time&#39;, &#39;Latitude&#39;, &#39;Longitude&#39;, &#39;Temperature&#39;, &#39;NumSats&#39;, &#39;DOP&#39;, &#39;HDOP&#39;)) ### create final data.frame ---- cattle.dat = rbind(cattle.dat.ATS, cattle.dat.lotek) %&gt;% mutate(CollarSerialNumber = as.integer(CollarSerialNumber)) 2.4 add cow ear tag and breed info ## read in collar metadata collar.metadata = read.csv(&#39;../cattle/raw data/collar_pedometer-metadata/collar data log.csv&#39;) %&gt;% mutate(download_start = as.POSIXct(download_start, format = &#39;%m/%d/%Y&#39;)) %&gt;% mutate(download_end = as.POSIXct(download_end, format = &#39;%m/%d/%Y&#39;)) %&gt;% rename(CollarSerialNumber = collar.no) collar.metadataS22.S23 = collar.metadata %&gt;% filter(download_end &gt; as.POSIXct(&quot;2021-11-10 MST&quot;)) cattle.dat.tags = left_join(cattle.dat, collar.metadataS22.S23[,1:3]) ## Joining, by = &quot;CollarSerialNumber&quot; 2.5 clean collar data NOTE: for now, Iâ€™m just removing all points with coordinates (0,0). I will need to change this to filter points based on NumSats or DOP/HDOP cattle.dat.tags = cattle.dat.tags %&gt;% filter(Latitude != 0 &amp; Longitude != 0) 2.6 save output to .csv write.csv(cattle.dat.tags, file = &#39;../processed data/2021-2022_GPS-combined.csv&#39;, row.names = F) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
